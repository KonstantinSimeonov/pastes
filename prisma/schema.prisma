// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions", "views"]
}

datasource db {
  provider   = "postgresql"
  url        = env("DB_URL")
  extensions = [uuidOssp(map: "uuid-ossp")]
}

model Paste {
  id        String   @id @db.Uuid
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  public    Boolean  @default(true)
  description String?

  authorId String?
  author   User?   @relation(fields: [authorId], references: [id])

  files    File[]

  @@map("pastes")
}

model File {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String  @db.VarChar(255)
  content   String   @db.VarChar(8192)
  pasteId   String   @db.Uuid
  paste     Paste    @relation(fields: [pasteId], references: [id])

  @@unique([pasteId, name])
  @@map("files")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  pastes        Paste[]
  preferences   UserPrefs?
//  stats         UserStats?

  @@map("users")
}

model UserPrefs {
  userId String @id
  prismTheme String @default("tomorrow")
  uiTheme String @default("dark")

  user User @relation(fields: [userId], references: [id])

  @@map("user_prefs")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verification_tokens")
}

//view UserStats {
//  id String @id
//  totalPastesCount Int
//
//  langs Json
//  user User? @relation(fields: [id], references: [id])
//
//  @@map("user_stats")
//}
